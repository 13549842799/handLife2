<template>
	<div class="portion-content">
		<list class="portion-list" v-for="p in portions" :key="p.id">
			<long-list :son="p" v-on:action="actionList"></long-list>
		</list>
		<bottom-model ref="addPortion" v-on:close="closeBottom" class="bottom-model-container">
            <view class="portion-add-title"><text>要创建一个分卷才能开始你的章节喔！</text></view>
            <view class="portion-add-content">
            	<text class="portion-add-content-text">分卷名称：</text>
            	<input v-model="newPortion.title" placeholder="快开始你的分卷标题吧!" placeholder-class="portion-placeholder-class" class="portion-input" />
            	<text class="portion-add-content-text">分卷简介：</text>
            	<textarea class="portion-add-content-textarea" v-model="newPortion.content" placeholder="快补充你的分卷简介吧!" placeholder-class="portion-placeholder-class" :maxlength="80"></textarea>
            </view>
            <view class="portion-add-bottom">
            	<button type="primary" size="mini" @tap="addPortion()">提交</button>
            </view>
		</bottom-model>
	</div>
</template>

<script>
	import portionApi from '../../../api/article/portion.js'
	
	import bottomModel from '../../../components/model/buttomModel.vue'
	
	import longList from '../../../components/list/longList.nvue'
	
	export default {
		components: {
			bottomModel,
			longList
		},
		data () {
			return {
				portions: [],
				newPortion: {
					novelId: null,
					title: '',
					content: ''
				}
			}
		},
		created () {
			//let id = option.id, title = option.title
			//let query = this.$router.history.current.query
			console.log(this.$router)
			let id = query.id, title = query.title
			uni.setNavigationBarTitle( { title: title} )
			
			let v = this
			v.newPortion.novelId = id
			
			portionApi.getPortionsList(id).then(res => {
				v.portions = res
			}).catch(err => {
				console.log(err)
			})
		},
		onNavigationBarButtonTap () {
			this.$refs.addPortion.open()
		},
		computed: {
			
		},
		methods: {
			actionList () {},
			initNewPortion () {
				return {novelId: null, title: '', content: ''}
			},
			closeBottom (e) {
				this.newPortion = this.initNewPortion()
				this.$refs.addPortion.close()
			},
			addPortion () {
				let v = this
				if (!v.newPortion.title) {
					uni.showToast({ title: '请填写标题', icon: "none" })
					return
				}
				portionApi.addPortion(v.newPortion).then(res => {
					let v = this
					v.portions.push(res)
					v.closeBottom()
					// #ifdef APP-PLUS
					    plus.nativeUI.toast('创建成功');
					// #endif
					// #ifdef H5
					    uni.showToast({ title: '创建成功'})
					// #endif			
				}).catch(err => {
					console.log(err)
				})
			}
		}
	}
</script>

<style>
	
    .portion-content {
		width: 750upx;		
	}
	
	.portion-list {
		width: 100%;
	}
	
	.portion-add-title {
		width: 100%;
		height: 60upx;
		border-bottom-width: 1upx;
		border-bottom-color: #E0E0E0;
	}
	
	.portion-add-title-text {
		width: 100%;
		height: 60upx;
		line-height: 60upx;
		text-align: center;
		font-size: 30upx;
		font-weight: 700;
	}
	
	.portion-add-content {
		width: 100%;
		margin-top: 20upx;
		flex-direction: column;
	}
	
	.portion-add-title-text, .portion-add-content-textarea, .portion-input, .portion-placeholder-class {
		font-size: 30upx;
	}
	
	.portion-add-title-text, .portion-add-content-textarea, .portion-input{
		margin-top: 20upx;
		margin-left: 20upx;
	}
	
	.portion-input, .portion-add-content-textarea{
		border-bottom-width: 1upx;
		border-bottom-color: #D5D5D5;
	}
	
	.portion-add-content-textarea {
		width: 690upx;
		border-radius: 20upx;
		height: 100upx;
		padding: 10upx;
	}
	
	 .portion-add-bottom {
		 margin-top: 20upx;
		 width: 100%;
		 justify-content: center;
	 }
	
	.portion-placeholder-class {
		color: #DCDCDC;
	}
</style>
